plugins {
  id 'java'
  id 'org.springframework.boot' version "$springframework"
  id 'io.spring.dependency-management' version "$dependencymanagement"
  id 'jacoco'
}

group = 'com.letstogether'
version = '0.0.1-SNAPSHOT'

java {
  sourceCompatibility = '21'
}

repositories {
  mavenCentral()
  maven {
    url = 'http://37.27.9.212:8081/repository/maven-snapshots'
    credentials {
      username = "laptev8"
      password = "Hyper1990!"
    }
    allowInsecureProtocol true
  }
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
  implementation 'org.springframework.boot:spring-boot-starter-webflux'
  implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
  implementation 'org.springframework.cloud:spring-cloud-starter-config'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'io.micrometer:micrometer-tracing-bridge-brave'
  implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
  implementation 'org.springframework.boot:spring-boot-starter-amqp'
  implementation 'org.springframework.amqp:spring-rabbit'

  implementation "com.letstogether:dto:$dto"
  implementation "com.letstogether:message-source-starter:$messagesource"

  compileOnly 'org.projectlombok:lombok'
  annotationProcessor 'org.projectlombok:lombok'
  annotationProcessor "org.mapstruct:mapstruct-processor:$mapStructVersion"
  compileOnly "org.mapstruct:mapstruct:$mapStructVersion"

  implementation "org.springdoc:springdoc-openapi-starter-webflux-ui:$openapi"

  implementation 'org.flywaydb:flyway-core'
  runtimeOnly 'org.postgresql:postgresql'
  runtimeOnly 'org.postgresql:r2dbc-postgresql'

  testImplementation "org.testcontainers:postgresql:$testContainersPostgres"
  testImplementation "org.testcontainers:junit-jupiter:$jupiter"
  testImplementation 'io.projectreactor:reactor-test'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}

tasks.named('test') {
  useJUnitPlatform()
  finalizedBy jacocoTestReport
}
